{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\nexport declare type SocketSuccessListner = (resultScan: any) => void;\nexport declare type SocketErrorListner = (resultScan: any) => void;\nexport interface SolofoCapacitorSocketPlugin {\n\n  Open(option: SocketOption): void;\n  addListener(eventName: 'SocketSuccessListner', listenerFunc: SocketSuccessListner): Promise<PluginListenerHandle>;\n  addListener(eventName: 'SocketErrorListner', listenerFunc: SocketErrorListner): Promise<PluginListenerHandle>;\n}\n\nexport interface SocketOption{\n  host: string,\n  port: number\n}\n"]}